/* 
QUALITY CHECKS

=========================================
SCRIPT PURPOSE
=========================================
This script performs quality checks
- Find null and duplicate values 
- check for unwanted spaces
- data standardization and consistency
- identify out of range dates
- data consistency between related fields

Usage Notes: 
- Run these scripts after loading the Silver Layer
- Investigate and resolve any descrepancies in data while running scripts
*/

------------------------------------------
DATA CLEANING FOR SILVER LAYER
------------------------------------------

==========================================
Check data in crm_cust_info
==========================================
-- Data Quality Checks
-- NULL VALUES AND DUPLICATE COUNT
SELECT cst_id, COUNT(*) 
FROM silver.crm_cust_info
HAVING COUNT(*) > 1 OR cst_id IS NULL;

-- check for unwanted spaces
SELECT cst_id,
cst_key,
TRIM(cst_firstname),
TRIM(cst_lastname),
cst_gndr
FROM silver.crm_cust_info;

-- data standardization and inconsistency
SELECT DISTINCT 
    cst_marital_status 
FROM silver.crm_cust_info;

==========================================
Check data in silver.crm_cust_info
==========================================
-- NULL and Duplicate values
SELECT prd_id, COUNT(*)
FROM silver.crm_prd_info
GROUP BY prd_id
HAVING COUNT(*) > 1 OR prd_id IS NULL;

-- unwanted spaces
SELECT prd_nm, TRIM(prd_nm)
FROM silver.crm_prd_info;

-- data standardization
SELECT prd_cost
FROM silver.crm_prd_info;

-- out of range dates
SELECT * FROM silver.crm_prd_info
WHERE prd_end_dt < prd_start_dt;

==========================================
Check data in silver.crm_cust_info
==========================================
-- check for null and duplicates
SELECT prd_id, COUNT(*)
FROM silver.crm_prd_info
GROUP BY prd_id
HAVING COUNT(*) > 1 OR prd_id IS NULL;

-- data standardization
SELECT prd_nm, TRIM(prd_nm)
FROM silver.crm_prd_info;
SELECT prd_cost
FROM silver.crm_prd_info;

-- check for out of range dates
SELECT * FROM silver.crm_prd_info
WHERE prd_end_dt < prd_start_dt;

==========================================
Check data in silver.crm_sales_details
==========================================
-- check for null and duplicates
SELECT sls_cust_id,
COUNT(*)
FROM silver.crm_sales_details
GROUP BY sls_cust_id
HAVING COUNT(*) > 1 OR sls_cust_id IS NULL;

-- check for unwanted spaces
SELECT cst_key
FROM silver.crm_cust_info
WHERE cst_lastname != TRIM(cst_lastname)

-- data standardization
SELECT DISTINCT cst_gndr
FROM bronze.crm_cust_info;

-- out of range dates
SELECT 
NULLIF(sls_due_dt,0) sls_due_dt
FROM bronze.crm_sales_details
WHERE sls_due_dt <= 0
OR LEN(sls_due_dt) !=8
OR sls_due_dt > 20500101
OR sls_due_dt < 19000101

-- check data consistency between sales, quantity and price
-- >> Sales = Quantity * price
-- >> Values must not be NULL, zero or negative

SELECT 
sls_sales,
sls_quantity,
sls_price
FROM bronze.crm_sales_details
WHERE sls_sales != sls_quantity * sls_price
OR sls_sales IS NULL OR sls_quantity IS NULL OR sls_price IS NULL
OR sls_sales <= 0 OR sls_quantity <=0 OR sls_price <=0

-- crm_sales_details extracting cid for data consistency
SELECT
cid,
CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid, 4, LEN(cid))
ELSE cid
END AS cid,
bdate,
gen
FROM bronze.erp_cust_az12
WHERE CASE WHEN cid LIKE '%NAS' THEN SUBSTRING(cid, 4, LEN(cid))
ELSE cid
END NOT IN (SELECT DISTINCT cst_key FROM silver.crm_cust_info);

==========================================
Check data in silver.erp_cust_az12
==========================================
-- Check for Null and duplicates
SELECT DISTINCT
bdate
FROM bronze.erp_cust_az12
WHERE bdate < '1924-01-01' OR bdate > GETDATE()

-- data standardization
SELECT DISTINCT
gen,
CASE WHEN UPPER(TRIM(gen)) IN ('F', 'FEMALE') THEN 'Female'
	 WHEN UPPER(TRIM(gen)) IN ('M', 'MALE') THEN 'Male'
	 ELSE 'n/a'
END AS gen
FROM bronze.erp_cust_az12

==========================================
Check data in silver.erp_loc_a101
==========================================
-- Null and duplicate values
SELECT
cid,
cntry
FROM bronze.erp_loc_a101;

-- data standardization
SELECT DISTINCT cntry
FROM bronze.erp_loc_a101
ORDER BY cntry

-- data standardization and consistency
SELECT REPLACE(cid, '-', '') cid,
cntry
FROM bronze.erp_loc_a101 WHERE REPLACE(cid, '-', '') NOT IN
(SELECT cst_key FROM silver.crm_cust_info)

SELECT REPLACE(cid, '-', '') cid,
CASE WHEN TRIM(cntry) = 'DE' THEN 'Geramny'
	WHEN TRIM(cntry) IN ('US', 'USA') THEN 'Unites States'
	WHEN TRIM(cntry) = '' OR cntry IS NULL THEN 'n/a'
	ELSE TRIM(cntry) 
END AS cntry
FROM bronze.erp_loc_a101 

==========================================
Check data in silver.erp_px_cat_g1v2
==========================================
-- Unwanted Spaces
select * from bronze.erp_px_cat_g1v2
WHERE cat != TRIM(cat) OR subcat != TRIM(subcat) OR maintenance != TRIM(maintenance)

-- Data Standardization
Select Distinct
	ci.cst_gndr,

